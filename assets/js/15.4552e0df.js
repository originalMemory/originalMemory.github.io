(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{444:function(s,t,a){"use strict";a.r(t);var n=a(17),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("有2个项目 A 和 B ，A 依赖的 Pod 的版本要和 B 同步，每次手动修改太麻烦，故通过 python 脚本来实现，具体实现逻辑如下：")]),s._v(" "),a("h2",{attrs:{id:"解析当前版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解析当前版本"}},[s._v("#")]),s._v(" 解析当前版本")]),s._v(" "),a("p",[s._v("通过 "),a("code",[s._v("pod ipc podfile-json Podfile")]),s._v(" 能得到当前 "),a("code",[s._v("Podfile")]),s._v(" 的相关信息。返回值里有很多内容，本次只关注 "),a("code",[s._v("target_definitions[0]dependencies")]),s._v(" 即文件里指定的所有 pod 的版本信息。")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"target_definitions"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"dependencies"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"SDWebImageWebPCoder"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n                        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0.3.1"')]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"FBRetainCycleDetector"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n                        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                            "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"git"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://github.com/facebook/FBRetainCycleDetector.git"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                            "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"commit"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"32c4afc"')]),s._v("\n                        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            xxx...\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    xxx...\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br")])]),a("blockquote",[a("ol",[a("li",[s._v("不是 "),a("code",[s._v("Podfile.lock")]),s._v(" 里的版本")]),s._v(" "),a("li",[s._v("关于 ipc 更详细的信息参见 "),a("a",{attrs:{href:"https://guides.cocoapods.org/terminal/commands.html#group_ipc",target:"_blank",rel:"noopener noreferrer"}},[s._v("IPC"),a("OutboundLink")],1)])])]),s._v(" "),a("p",[s._v("转换时可以使用如下方法来将所有依赖信息从 json 字符串中转换为字典。")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" value "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" dependencies"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("items"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("isinstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("and")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"更新版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更新版本"}},[s._v("#")]),s._v(" 更新版本")]),s._v(" "),a("p",[s._v("按行读取 "),a("code",[s._v("Podflie")]),s._v(" ，通过正则找到定义的 pod 信息，然后替换对应版本信息。核心代码如下：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("match "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("compile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sub"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'pod\\s+\\'{pod}\\'\\s*,\\s*\\'([\\d|\\.]+)\\''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("findall"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("line"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nlines"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" lines"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("replace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("match"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" version"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"根据新-podspec-循环更新依赖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#根据新-podspec-循环更新依赖"}},[s._v("#")]),s._v(" 根据新 podspec 循环更新依赖")]),s._v(" "),a("h3",{attrs:{id:"获取仓库的本地地址"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取仓库的本地地址"}},[s._v("#")]),s._v(" 获取仓库的本地地址")]),s._v(" "),a("p",[s._v("从 "),a("code",[s._v("pod repo list")]),s._v(" 的返回值里找到仓库在本地的地址。返回的地址格式为：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[s._v("master\n- Type"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" git (master)\n- URL"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("  https"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//github.com/CocoaPods/Specs.git")]),s._v("\n- Path"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" /Users/wuhoubo/.cocoapods/repos/master\n\ntrunk\n- Type"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" CDN\n- URL"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("  https"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//cdn.cocoapods.org/")]),s._v("\n- Path"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" /Users/wuhoubo/.cocoapods/repos/trunk\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("提取的正则可以参考 "),a("code",[s._v("(.*)\\n-\\s*Type:\\s*(.*)\\n-\\s*URL:\\s*(.*)\\n-\\s*Path:\\s*(.*)")]),s._v(" 。")]),s._v(" "),a("h3",{attrs:{id:"获取-podspec-的地址"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取-podspec-的地址"}},[s._v("#")]),s._v(" 获取 podspec 的地址")]),s._v(" "),a("p",[s._v("这一步根据具体仓库的规则而定，不同仓库的拆分算法可能不一样，但是根据 pod 的名称、版本总是能够计算出对应的路径。本次项目里使用的私有仓库没有做拆分，直接通过 "),a("code",[s._v("{repo_path}/{pod}/{version}/{pod}.podspec")]),s._v(" 即可获取。")]),s._v(" "),a("p",[s._v("如果在仓库里找不到，也可以通过如下命令来搜索出 pod 指定 version 的 podspec 在本地的位置。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("pod spec which "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("show"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("all "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" grep "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("version"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"解析-podspec-依赖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解析-podspec-依赖"}},[s._v("#")]),s._v(" 解析 podspec 依赖")]),s._v(" "),a("p",[s._v("通过如下 "),a("code",[s._v("ipc")]),s._v(" 命令能得到解析好的 podspec 的依赖，格式同 Podfile 的解析结果。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("pod ipc spec "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("podspec\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("对其解析后，就能得到指定 podspec 里对其他 pod 的依赖了。")]),s._v(" "),a("p",[s._v("需要注意的的是，podspec 的解析结果里可能有 "),a("code",[s._v("subspecs")]),s._v(" ，如果存在该项，还需要进一步处理。")]),s._v(" "),a("p",[s._v("找到 "),a("code",[s._v("subspecs")]),s._v(" 里 "),a("code",[s._v("name")]),s._v(" 为和 "),a("code",[s._v("subspecs")]),s._v(" 平级的 "),a("code",[s._v("default_subspecs")]),s._v(" 相同的 "),a("code",[s._v("dependencies")]),s._v(" 。以它作为当前 podspec 的最终依赖。")]),s._v(" "),a("h3",{attrs:{id:"更新依赖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更新依赖"}},[s._v("#")]),s._v(" 更新依赖")]),s._v(" "),a("p",[s._v("遍历 podspec 里的依赖，如果依赖的 pod 的版本和 Podfile 里当前指定的版本一致，不做操作，否则需要更新该 pod 的版本。")]),s._v(" "),a("p",[s._v("如果该 pod 的版本是锁死的，按之前更新版本的操作再来一遍即可。")]),s._v(" "),a("p",[s._v("如果不是锁死的，而是如 "),a("code",[s._v("~>")]),s._v(" 的可变版本，则先找到 pod 可用的最大版本，再根据 Podfile 里的版本再做判断，如果 Podfile 里的版本符合约束，则不做操作，否则修改 Podfile 里的版本到最大版本。")]),s._v(" "),a("p",[s._v("找到可用的最大版本的方式同之前获取具体 podspec 的方式，不过此处不指定具体版本，而是遍历找到所有可用版本里距最大版本最近的1个。")])])}),[],!1,null,null,null);t.default=e.exports}}]);