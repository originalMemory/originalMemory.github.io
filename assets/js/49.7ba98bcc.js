(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{478:function(e,t,a){"use strict";a.r(t);var v=a(17),r=Object(v.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"algorithm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#algorithm"}},[e._v("#")]),e._v(" Algorithm")]),e._v(" "),a("p",[a("RouterLink",{attrs:{to:"/pages/375244/"}},[e._v("整数转罗马数字")])],1),e._v(" "),a("h2",{attrs:{id:"review"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#review"}},[e._v("#")]),e._v(" Review")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://betterprogramming.pub/ios-architectures-explained-which-one-best-fits-my-project-94b4ffaad16",target:"_blank",rel:"noopener noreferrer"}},[e._v("iOS Architectures Explained: Which One Best Fits My Project?"),a("OutboundLink")],1)]),e._v(" "),a("h3",{attrs:{id:"好架构的益处"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#好架构的益处"}},[e._v("#")]),e._v(" 好架构的益处")]),e._v(" "),a("ul",[a("li",[e._v("可以用简洁的语言去理解功能中不同职责。")]),e._v(" "),a("li",[e._v("职责间彼此独立，更容易测试和优化。")]),e._v(" "),a("li",[e._v("使项目长期可维护。")]),e._v(" "),a("li",[e._v("减少类与组件之间的耦合。")]),e._v(" "),a("li",[e._v("满足项目的复杂期望。")]),e._v(" "),a("li",[e._v("UI 和业务代码分离。")])]),e._v(" "),a("p",[e._v("架构没有最好，只有最适合。")]),e._v(" "),a("h3",{attrs:{id:"model-view-controller-mvc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#model-view-controller-mvc"}},[e._v("#")]),e._v(" Model-View-Controller(MVC)")]),e._v(" "),a("ol",[a("li",[a("code",[e._v("Model")]),e._v(" : 包括场景的所有业务规则、数据及用例，主要是计算和保存屏幕的状态。")]),e._v(" "),a("li",[a("code",[e._v("View")]),e._v(" : 所有 UI 组件，没有逻辑代码，其状态根据业务逻辑输出结果生成。")]),e._v(" "),a("li",[a("code",[e._v("Controller")]),e._v(" : 接收来自 "),a("code",[e._v("View")]),e._v(" 的输出，传递给 "),a("code",[e._v("Model")]),e._v(" 去计算，再根据 "),a("code",[e._v("Model")]),e._v(" 的输出去刷新 "),a("code",[e._v("View")]),e._v(" 。")])]),e._v(" "),a("p",[a("img",{attrs:{src:"https://illusion-blog.oss-cn-beijing.aliyuncs.com/img/2022/02/07e758e9194731e17e5e3e61a47c8e69.jpeg",alt:"img"}})]),e._v(" "),a("p",[e._v("Swift 默认就提供了 MVC 架构（UIViewController 和 UIView）")]),e._v(" "),a("h4",{attrs:{id:"问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[e._v("#")]),e._v(" 问题")]),e._v(" "),a("ul",[a("li",[e._v("大多数人在 ViewController 里放了大量的业务逻辑和代理规则，使得其太庞大了。")]),e._v(" "),a("li",[e._v("ViewController 负责的内容太多，包括服务， View 交互监听，实现委托和导航逻辑等。")]),e._v(" "),a("li",[e._v("测试困难。")]),e._v(" "),a("li",[e._v("不容易 debug 。")]),e._v(" "),a("li",[e._v("在创建子 vc 时更麻烦。")])]),e._v(" "),a("h4",{attrs:{id:"什么时候用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么时候用"}},[e._v("#")]),e._v(" 什么时候用？")]),e._v(" "),a("ul",[a("li",[e._v("写简单的项目如功能demo或者简单测试 app 功能时。")]),e._v(" "),a("li",[e._v("当有琐碎的业务规则时。")])]),e._v(" "),a("h3",{attrs:{id:"model-view-viewmodel-mvvm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#model-view-viewmodel-mvvm"}},[e._v("#")]),e._v(" Model-View-ViewModel(MVVM)")]),e._v(" "),a("p",[e._v("该模型增加了 ViewModel 层，这样 Model 里不再保存任何逻辑，只存简单数据即可。")]),e._v(" "),a("ol",[a("li",[a("code",[e._v("View")]),e._v(" : 同时包括 MVC 中的 View 和 Controller ，只用于设置及刷新 UI 。")]),e._v(" "),a("li",[a("code",[e._v("Model")]),e._v(" : 只是当前屏幕的数据，不包含逻辑。")]),e._v(" "),a("li",[a("code",[e._v("ViewModel")]),e._v(" : 负责所有业务逻辑和展示规则。")])]),e._v(" "),a("p",[a("img",{attrs:{src:"https://illusion-blog.oss-cn-beijing.aliyuncs.com/img/2022/02/65918df6774f6daf329badd782a72b63.jpeg",alt:"img"}})]),e._v(" "),a("h4",{attrs:{id:"问题-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题-2"}},[e._v("#")]),e._v(" 问题")]),e._v(" "),a("ul",[a("li",[e._v("ViewModel 责任太多。")]),e._v(" "),a("li",[e._v("没有导航层。")]),e._v(" "),a("li",[e._v("不容易测试。")])]),e._v(" "),a("h4",{attrs:{id:"什么时候用-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么时候用-2"}},[e._v("#")]),e._v(" 什么时候用？")]),e._v(" "),a("ul",[a("li",[e._v("项目只有一些简单逻辑和测试时。")]),e._v(" "),a("li",[e._v("没有太复杂的用例。")]),e._v(" "),a("li",[e._v("没有巨量场景。")]),e._v(" "),a("li",[e._v("App 仍旧是概念状态，不确定未来的具体形态。")])]),e._v(" "),a("h3",{attrs:{id:"coordinator-pattern"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#coordinator-pattern"}},[e._v("#")]),e._v(" Coordinator Pattern")]),e._v(" "),a("p",[e._v("虽然只是一种设计模式，但是能用于解决前两者的很多问题。")]),e._v(" "),a("p",[e._v("Coordinator 用于切换两个场景。")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://illusion-blog.oss-cn-beijing.aliyuncs.com/img/2022/02/e4cff6a060dad7f5a96b1e4b4d979fe0.jpeg",alt:"img"}})]),e._v(" "),a("h4",{attrs:{id:"什么时候用-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么时候用-3"}},[e._v("#")]),e._v(" 什么时候用？")]),e._v(" "),a("ul",[a("li",[e._v("想把导航逻辑从场景中拆分出来的时候。")])]),e._v(" "),a("h2",{attrs:{id:"tip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tip"}},[e._v("#")]),e._v(" Tip")]),e._v(" "),a("h2",{attrs:{id:"share"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#share"}},[e._v("#")]),e._v(" Share")])])}),[],!1,null,null,null);t.default=r.exports}}]);